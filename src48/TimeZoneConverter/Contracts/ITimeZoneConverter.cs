//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeZoneConverter.Contracts
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://bartjolling.github.io/", ConfigurationName="TimeZoneConverter.Contracts.ITimeZoneConverter")]
    public interface ITimeZoneConverter
    {
        
        // CODEGEN: Generating message contract since the wrapper name (ConvertToOffsetRequest) of message ConvertToOffsetRequest does not match the default value (ConvertToOffset)
        [System.ServiceModel.OperationContractAttribute(Action="http://bartjolling.github.io/ITimeZoneConverter/ConvertToOffsetRequest", ReplyAction="http://bartjolling.github.io/ITimeZoneConverter/ConvertToOffsetResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        TimeZoneConverter.Contracts.ConvertToOffsetResponse ConvertToOffset(TimeZoneConverter.Contracts.ConvertToOffsetRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bartjolling.github.io/")]
    public partial class TimeZoneConversionRequest
    {
        
        private System.DateTime fromDateTimeField;
        
        private int fromOffsetField;
        
        private int toOffsetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime FromDateTime
        {
            get
            {
                return this.fromDateTimeField;
            }
            set
            {
                this.fromDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int FromOffset
        {
            get
            {
                return this.fromOffsetField;
            }
            set
            {
                this.fromOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ToOffset
        {
            get
            {
                return this.toOffsetField;
            }
            set
            {
                this.toOffsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://bartjolling.github.io/")]
    public partial class TimeZoneConversionResponse
    {
        
        private System.DateTime toDateTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime ToDateTime
        {
            get
            {
                return this.toDateTimeField;
            }
            set
            {
                this.toDateTimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToOffsetRequest", WrapperNamespace="http://bartjolling.github.io/", IsWrapped=true)]
    public partial class ConvertToOffsetRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://bartjolling.github.io/", Order=0)]
        public TimeZoneConverter.Contracts.TimeZoneConversionRequest TimeZoneConversionRequest;
        
        public ConvertToOffsetRequest()
        {
        }
        
        public ConvertToOffsetRequest(TimeZoneConverter.Contracts.TimeZoneConversionRequest TimeZoneConversionRequest)
        {
            this.TimeZoneConversionRequest = TimeZoneConversionRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToOffsetResponse", WrapperNamespace="http://bartjolling.github.io/", IsWrapped=true)]
    public partial class ConvertToOffsetResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://bartjolling.github.io/", Order=0)]
        public TimeZoneConverter.Contracts.TimeZoneConversionResponse TimeZoneConversionResponse;
        
        public ConvertToOffsetResponse()
        {
        }
        
        public ConvertToOffsetResponse(TimeZoneConverter.Contracts.TimeZoneConversionResponse TimeZoneConversionResponse)
        {
            this.TimeZoneConversionResponse = TimeZoneConversionResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITimeZoneConverterChannel : TimeZoneConverter.Contracts.ITimeZoneConverter, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeZoneConverterClient : System.ServiceModel.ClientBase<TimeZoneConverter.Contracts.ITimeZoneConverter>, TimeZoneConverter.Contracts.ITimeZoneConverter
    {
        
        public TimeZoneConverterClient()
        {
        }
        
        public TimeZoneConverterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public TimeZoneConverterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public TimeZoneConverterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public TimeZoneConverterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeZoneConverter.Contracts.ConvertToOffsetResponse TimeZoneConverter.Contracts.ITimeZoneConverter.ConvertToOffset(TimeZoneConverter.Contracts.ConvertToOffsetRequest request)
        {
            return base.Channel.ConvertToOffset(request);
        }
        
        public TimeZoneConverter.Contracts.TimeZoneConversionResponse ConvertToOffset(TimeZoneConverter.Contracts.TimeZoneConversionRequest TimeZoneConversionRequest)
        {
            TimeZoneConverter.Contracts.ConvertToOffsetRequest inValue = new TimeZoneConverter.Contracts.ConvertToOffsetRequest();
            inValue.TimeZoneConversionRequest = TimeZoneConversionRequest;
            TimeZoneConverter.Contracts.ConvertToOffsetResponse retVal = ((TimeZoneConverter.Contracts.ITimeZoneConverter)(this)).ConvertToOffset(inValue);
            return retVal.TimeZoneConversionResponse;
        }
    }
}
